{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/inputtext\";\nfunction VRInputComponent_ng_container_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" Passwords must be at least 8 characters long, have 1 uppercase letter, 1 lowecase letter, and 1 number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VRInputComponent_ng_container_1_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" Field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VRInputComponent_ng_container_1_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Input must be alteast \", ctx_r3.control.errors == null ? null : ctx_r3.control.errors[\"minlength\"].requiredLength, \" characters long \");\n  }\n}\nfunction VRInputComponent_ng_container_1_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" You must enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VRInputComponent_ng_container_1_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" value too low \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VRInputComponent_ng_container_1_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" value too high \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VRInputComponent_ng_container_1_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" Passwords do not match \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VRInputComponent_ng_container_1_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" Email is already taken \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VRInputComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 2);\n    i0.ɵɵtemplate(1, VRInputComponent_ng_container_1_p_1_Template, 2, 0, \"p\", 3);\n    i0.ɵɵtemplate(2, VRInputComponent_ng_container_1_p_2_Template, 2, 0, \"p\", 3);\n    i0.ɵɵtemplate(3, VRInputComponent_ng_container_1_p_3_Template, 2, 1, \"p\", 3);\n    i0.ɵɵtemplate(4, VRInputComponent_ng_container_1_p_4_Template, 2, 0, \"p\", 3);\n    i0.ɵɵtemplate(5, VRInputComponent_ng_container_1_p_5_Template, 2, 0, \"p\", 3);\n    i0.ɵɵtemplate(6, VRInputComponent_ng_container_1_p_6_Template, 2, 0, \"p\", 3);\n    i0.ɵɵtemplate(7, VRInputComponent_ng_container_1_p_7_Template, 2, 0, \"p\", 3);\n    i0.ɵɵtemplate(8, VRInputComponent_ng_container_1_p_8_Template, 2, 0, \"p\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors[\"email\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors[\"min\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors[\"max\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors[\"noMatch\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors[\"emailTaken\"]);\n  }\n}\nexport class VRInputComponent {\n  constructor() {\n    this.control = new FormControl();\n    this.type = '';\n    this.placeholder = '';\n    this.format = '';\n    this.value = '';\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function VRInputComponent_Factory(t) {\n    return new (t || VRInputComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VRInputComponent,\n    selectors: [[\"app-vr-input\"]],\n    inputs: {\n      control: \"control\",\n      type: \"type\",\n      placeholder: \"placeholder\",\n      format: \"format\",\n      value: \"value\"\n    },\n    decls: 2,\n    vars: 4,\n    consts: [[\"pInputText\", \"\", \"value\", \"\", \"mask\", \"format\", \"dropSpecialCharacters\", \"false\", 1, \"form-input\", 3, \"formControl\", \"type\", \"placeholder\"], [\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [\"class\", \"form-error\", 4, \"ngIf\"], [1, \"form-error\"]],\n    template: function VRInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n        i0.ɵɵtemplate(1, VRInputComponent_ng_container_1_Template, 9, 8, \"ng-container\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.placeholder);\n        i0.ɵɵproperty(\"formControl\", ctx.control)(\"type\", ctx.type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.control.touched && ctx.control.dirty);\n      }\n    },\n    dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.InputText],\n    styles: [\".form-input[_ngcontent-%COMP%] {\\n  width: 95%;\\n  padding: 8px 10px;\\n  color: rgba(128, 128, 128, 0.808);\\n  border: color(rgb(39, 39, 39)) 80px;\\n  transition: 500ms;\\n}\\n\\n.form-error[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 10px;\\n  margin-bottom: -2px;\\n  font-weight: 500;\\n}\\n\\n[_ngcontent-%COMP%]::ng-container {\\n  background-color: green;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  background-color: green;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0cy9zaGFyZWQvdnItaW5wdXQvdnItaW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRyxVQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQ0FBQTtFQUNBLG1DQUFBO0VBQ0EsaUJBQUE7QUFBSDs7QUFHQTtFQUNJLFVBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUFKOztBQUdBO0VBQ0ksdUJBQUE7QUFBSjs7QUFHQTtFQUNJLHVCQUFBO0FBQUoiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1pbnB1dCB7XG4vLyAgICBkaXNwbGF5OiBibG9jaztcbiAgIHdpZHRoOiA5NSU7XG4gICBwYWRkaW5nOiA4cHggMTBweDtcbiAgIGNvbG9yOiByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuODA4KTtcbiAgIGJvcmRlcjpjb2xvciggcmdiKDM5LCAzOSwgMzkpKSA4MHB4O1xuICAgdHJhbnNpdGlvbjogNTAwbXM7XG59XG5cbi5mb3JtLWVycm9yIHtcbiAgICBjb2xvcjogcmVkO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAtMnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG5cbn1cbjo6bmctY29udGFpbmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r3","control","errors","requiredLength","ɵɵelementContainerStart","ɵɵtemplate","VRInputComponent_ng_container_1_p_1_Template","VRInputComponent_ng_container_1_p_2_Template","VRInputComponent_ng_container_1_p_3_Template","VRInputComponent_ng_container_1_p_4_Template","VRInputComponent_ng_container_1_p_5_Template","VRInputComponent_ng_container_1_p_6_Template","VRInputComponent_ng_container_1_p_7_Template","VRInputComponent_ng_container_1_p_8_Template","ɵɵelementContainerEnd","ɵɵproperty","ctx_r0","VRInputComponent","constructor","type","placeholder","format","value","ngOnInit","_","_2","selectors","inputs","decls","vars","consts","template","VRInputComponent_Template","rf","ctx","ɵɵelement","VRInputComponent_ng_container_1_Template","ɵɵpropertyInterpolate","touched","dirty"],"sources":["/Users/ikoi6/codingPs/vroom/Vroom_CMS_V2/src/app/layouts/shared/vr-input/vr-input.component.ts","/Users/ikoi6/codingPs/vroom/Vroom_CMS_V2/src/app/layouts/shared/vr-input/vr-input.component.html"],"sourcesContent":["\nimport { Component, OnInit, Input} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-vr-input',\n  templateUrl: './vr-input.component.html',\n  styleUrls: ['./vr-input.component.scss']\n})\nexport class VRInputComponent implements OnInit {\n  @Input() control: FormControl = new FormControl()\n  @Input() type = ''\n  @Input() placeholder = '';\n  @Input() format = ''\n  @Input() value = ''\n  \n    \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n\n","<input pInputText [formControl]=\"control\" value=\"\" [type]=\"type\" placeholder=\"{{placeholder}}\"  mask=\"format\" dropSpecialCharacters=\"false\"   \n        class=\"form-input\"\n        />\n<!--mask=\"format\" dropSpecialCharacters=\"false\"   -->\n        <ng-container *ngIf=\"control.touched && control.dirty\" class=\"container\">\n            <p class=\"form-error\" *ngIf=\"control.errors?.['pattern']\">\n                Passwords must be at least 8 characters long, \n                have 1 uppercase letter, 1 lowecase letter, and 1 number\n            </p>\n            <p *ngIf=\"control.errors?.['minlength']\" class=\"form-error\">\n                <!-- {{ registerForm.get('name')?.errors | json }} -->\n                Field is required\n            </p>\n            <p *ngIf=\" control.errors?.['minlength']\" class=\"form-error\">\n                <!-- {{ registerForm.get('name')?.errors | json }} -->\n                <!-- value inputted is \n                {{ control.errors?.['minlength'].actualLength }}  -->\n                Input must be alteast\n                {{ control.errors?.['minlength'].requiredLength  }} characters long\n                \n            </p>\n            <p *ngIf=\"control.errors?.['email']\" class=\"form-error\">\n                You must enter a valid email\n            </p>\n            <p *ngIf=\"control.errors?.['min']\" class=\"form-error\">\n                value too low\n            </p>\n            <p *ngIf=\"control.errors?.['max']\" class=\"form-error\">\n                value too high\n            </p>\n            <p *ngIf=\"control.errors?.['noMatch']\" class=\"form-error\">\n                Passwords do not match\n            </p>\n            <p *ngIf=\"control.errors?.['emailTaken']\" class=\"form-error\">\n               Email is already taken\n            </p>\n        </ng-container>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}