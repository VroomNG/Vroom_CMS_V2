{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.baseUrl = environment.serverUrl;\n  }\n  addAdmin(adminForm) {\n    return this.http.post(`${this.baseUrl}/addAdmin`, adminForm);\n  }\n  addQuest(questForm) {\n    return this.http.post(`${this.baseUrl}/api/v1/quest`, questForm);\n  }\n  addQuestLocation(locationForm) {\n    return this.http.post(`${this.baseUrl}/api/v1/questLocation`, locationForm);\n  }\n  updateAdmin(editAdminForm, adminId) {\n    // const userId = admin.id; // Assuming 'id' is the property that represents the user ID\n    return this.http.put(`${this.baseUrl}/updateUser/${adminId}`, editAdminForm);\n  }\n  updateQuest(editQuestForm, questId) {\n    return this.http.put(`${this.baseUrl}/api/v1/quest/${questId}`, editQuestForm);\n  }\n  deleteAdmin(adminId) {\n    // const userId = admin.id; // Assuming 'id' is the property that represents the user ID\n    return this.http.delete(`${this.baseUrl}/users/${adminId}`);\n  }\n  deleteQuest(questId) {\n    return this.http.delete(`${this.baseUrl}/api/v1/quest/${questId}`);\n  }\n  getAdmins() {\n    return this.http.get(`${this.baseUrl}/api/v1/adminView`);\n  }\n  getQuest() {\n    return this.http.get(`${this.baseUrl}/api/v1/quests`);\n  }\n  getSingleQuest(questId) {\n    return this.http.get(`${this.baseUrl}/api/v1/quest/${questId}`);\n  }\n  getSingleAdmin(adminId) {\n    return this.http.get(`${this.baseUrl}/users/${adminId}`);\n  }\n  getAccessTrail() {\n    return this.http.get(`${this.baseUrl}/getAccessLog`);\n  }\n  static #_ = this.ɵfac = function AdminService_Factory(t) {\n    return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminService,\n    factory: AdminService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","AdminService","constructor","http","httpOptions","headers","baseUrl","serverUrl","addAdmin","adminForm","post","addQuest","questForm","addQuestLocation","locationForm","updateAdmin","editAdminForm","adminId","put","updateQuest","editQuestForm","questId","deleteAdmin","delete","deleteQuest","getAdmins","get","getQuest","getSingleQuest","getSingleAdmin","getAccessTrail","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/ikoi6/codingPs/vroom/Vroom_CMS_V2/src/app/service/admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {environment} from '../../environments/environment.prod';\nimport { Observable } from 'rxjs';\nimport { IAdmin, IAccessTrail,IQuest } from '../model/admins';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  readonly httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };  \n\n  private baseUrl = environment.serverUrl\n\n  constructor(public http: HttpClient) { }\n\n  addAdmin(adminForm:any){\n    return this.http.post(`${this.baseUrl}/addAdmin`, adminForm)\n  }\n  addQuest(questForm:any){\n    return this.http.post(`${this.baseUrl}/api/v1/quest`, questForm)\n  }\n  addQuestLocation(locationForm:any){\n    return this.http.post(`${this.baseUrl}/api/v1/questLocation`, locationForm)\n  }\n  \n  updateAdmin(editAdminForm: object, adminId:any) {\n    // const userId = admin.id; // Assuming 'id' is the property that represents the user ID\n    return this.http.put(`${this.baseUrl}/updateUser/${adminId}`, editAdminForm);\n  }\n  updateQuest(editQuestForm: object, questId:any) {\n\n    return this.http.put(`${this.baseUrl}/api/v1/quest/${questId}`, editQuestForm);\n  }\n\n  deleteAdmin(adminId:any) {\n    // const userId = admin.id; // Assuming 'id' is the property that represents the user ID\n    return this.http.delete(`${this.baseUrl}/users/${adminId}`);\n  }\n  deleteQuest(questId:any) {\n    return this.http.delete(`${this.baseUrl}/api/v1/quest/${questId}`);\n  }\n\n  getAdmins(): Observable<IAdmin[]>{\n    return this.http.get<IAdmin[]>(`${this.baseUrl}/api/v1/adminView`);\n  }\n  getQuest(): Observable<IQuest[]>{\n    return this.http.get<IQuest[]>(`${this.baseUrl}/api/v1/quests`);\n  }\n\n  getSingleQuest(questId: any): Observable<any>{\n    return this.http.get<any>(`${this.baseUrl}/api/v1/quest/${questId}`);\n  }\n  \n  getSingleAdmin(adminId: any): Observable<IAdmin[]>{\n    return this.http.get<IAdmin[]>(`${this.baseUrl}/users/${adminId}`);\n  }\n  \n  getAccessTrail(): Observable<IAccessTrail[]>{\n    return this.http.get<IAccessTrail[]>(`${this.baseUrl}/getAccessLog`);\n  }\n\n}\n\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAQC,WAAW,QAAO,qCAAqC;;;AAQ/D,OAAM,MAAOC,YAAY;EAUvBC,YAAmBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARd,KAAAC,WAAW,GAAG;MACrBC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IAEO,KAAAO,OAAO,GAAGN,WAAW,CAACO,SAAS;EAEA;EAEvCC,QAAQA,CAACC,SAAa;IACpB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,OAAO,WAAW,EAAEG,SAAS,CAAC;EAC9D;EACAE,QAAQA,CAACC,SAAa;IACpB,OAAO,IAAI,CAACT,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,OAAO,eAAe,EAAEM,SAAS,CAAC;EAClE;EACAC,gBAAgBA,CAACC,YAAgB;IAC/B,OAAO,IAAI,CAACX,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,OAAO,uBAAuB,EAAEQ,YAAY,CAAC;EAC7E;EAEAC,WAAWA,CAACC,aAAqB,EAAEC,OAAW;IAC5C;IACA,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAC,GAAG,IAAI,CAACZ,OAAO,eAAeW,OAAO,EAAE,EAAED,aAAa,CAAC;EAC9E;EACAG,WAAWA,CAACC,aAAqB,EAAEC,OAAW;IAE5C,OAAO,IAAI,CAAClB,IAAI,CAACe,GAAG,CAAC,GAAG,IAAI,CAACZ,OAAO,iBAAiBe,OAAO,EAAE,EAAED,aAAa,CAAC;EAChF;EAEAE,WAAWA,CAACL,OAAW;IACrB;IACA,OAAO,IAAI,CAACd,IAAI,CAACoB,MAAM,CAAC,GAAG,IAAI,CAACjB,OAAO,UAAUW,OAAO,EAAE,CAAC;EAC7D;EACAO,WAAWA,CAACH,OAAW;IACrB,OAAO,IAAI,CAAClB,IAAI,CAACoB,MAAM,CAAC,GAAG,IAAI,CAACjB,OAAO,iBAAiBe,OAAO,EAAE,CAAC;EACpE;EAEAI,SAASA,CAAA;IACP,OAAO,IAAI,CAACtB,IAAI,CAACuB,GAAG,CAAW,GAAG,IAAI,CAACpB,OAAO,mBAAmB,CAAC;EACpE;EACAqB,QAAQA,CAAA;IACN,OAAO,IAAI,CAACxB,IAAI,CAACuB,GAAG,CAAW,GAAG,IAAI,CAACpB,OAAO,gBAAgB,CAAC;EACjE;EAEAsB,cAAcA,CAACP,OAAY;IACzB,OAAO,IAAI,CAAClB,IAAI,CAACuB,GAAG,CAAM,GAAG,IAAI,CAACpB,OAAO,iBAAiBe,OAAO,EAAE,CAAC;EACtE;EAEAQ,cAAcA,CAACZ,OAAY;IACzB,OAAO,IAAI,CAACd,IAAI,CAACuB,GAAG,CAAW,GAAG,IAAI,CAACpB,OAAO,UAAUW,OAAO,EAAE,CAAC;EACpE;EAEAa,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAC3B,IAAI,CAACuB,GAAG,CAAiB,GAAG,IAAI,CAACpB,OAAO,eAAe,CAAC;EACtE;EAAC,QAAAyB,CAAA,G;qBAxDU9B,YAAY,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZnC,YAAY;IAAAoC,OAAA,EAAZpC,YAAY,CAAAqC,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}