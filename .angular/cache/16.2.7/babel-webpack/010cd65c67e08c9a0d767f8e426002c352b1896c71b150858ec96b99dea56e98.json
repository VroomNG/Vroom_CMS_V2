{"ast":null,"code":"import { environment } from '../../environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MapService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.serverUrl;\n  }\n  getMapList() {\n    return this.http.get(`${this.baseUrl}/api/v1/adminMapList`);\n  }\n  static #_ = this.ɵfac = function MapService_Factory(t) {\n    return new (t || MapService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MapService,\n    factory: MapService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","MapService","constructor","http","baseUrl","serverUrl","getMapList","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/ikoi6/codingPs/vroom/Vroom_CMS_V2/src/app/service/map.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {environment} from '../../environments/environment.prod';\nimport { Observable } from 'rxjs';\nimport { IMapList } from '../model/maps';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  private baseUrl = environment.serverUrl\n\n  constructor(public http: HttpClient) { }\n   getMapList(): Observable<IMapList[]>{\n            return this.http.get<IMapList[]>(`${this.baseUrl}/api/v1/adminMapList`);\n          }\n \n}\n\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from 'src/environments/environment.prod';\n// import { IMapList } from '../model/maps';\n// // import { Configuration } from '../../configuration';\n// // import { DefaultUrlSerializer } from '@angular/router';\n// import { Observable } from 'rxjs';\n\n// @Injectable()\n// export class MapService {\n//     // readonly httpOptions = {\n//     //     headers: new HttpHeaders({\n//     //         'Content-Type': 'application/json'\n//     //     })\n//     // };\n//     private baseUrl = environment.serverUrl\n\n//     constructor(private http: HttpClient,\n//         //  private config: Configuration\n//          ) { }\n\n//          getMapList(): Observable<IMapList[]>{\n//             return this.http.get<IMapList[]>(`${this.baseUrl}/api/v1/adminMapList`);\n//           }\n//     // getMapsList(inputParameter: { [x: string]: any; token?: any; }) {\n//     //   //  debugger;\n//     //     const serializer = new DefaultUrlSerializer();\n//     //     const paramSerializer = serializer.parse('');\n//     //     paramSerializer.queryParams = inputParameter;\n//     //     const params = serializer.serialize(paramSerializer);\n//     //     return this.http.get(this.config.OnlineDrivers + params , this.httpOptions);\n//     // }\n\n//     // getdriverList(inputParameter: { [x: string]: any; token?: any; }){\n//     //     debugger;\n//     //     const serializer = new DefaultUrlSerializer();\n//     //     const paramSerializer = serializer.parse('');\n//     //     paramSerializer.queryParams = inputParameter;\n//     //     const params = serializer.serialize(paramSerializer);\n//     //     return this.http.get(this.config.driverDetails + params , this.httpOptions);\n//     // }\n\n// }"],"mappings":"AAEA,SAAQA,WAAW,QAAO,qCAAqC;;;AAO/D,OAAM,MAAOC,UAAU;EAIrBC,YAAmBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFf,KAAAC,OAAO,GAAGJ,WAAW,CAACK,SAAS;EAEA;EACtCC,UAAUA,CAAA;IACD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,sBAAsB,CAAC;EACzE;EAAC,QAAAI,CAAA,G;qBAPEP,UAAU,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVZ,UAAU;IAAAa,OAAA,EAAVb,UAAU,CAAAc,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}